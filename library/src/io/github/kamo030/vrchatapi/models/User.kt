/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.kamo030.vrchatapi.models

import io.github.kamo030.vrchatapi.models.AgeVerificationStatus
import io.github.kamo030.vrchatapi.models.Badge
import io.github.kamo030.vrchatapi.models.DeveloperType
import io.github.kamo030.vrchatapi.models.UserState
import io.github.kamo030.vrchatapi.models.UserStatus

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param ageVerificationStatus 
 * @param ageVerified 
 * @param allowAvatarCopying 
 * @param bio 
 * @param bioLinks 
 * @param currentAvatarImageUrl When profilePicOverride is not empty, use it instead.
 * @param currentAvatarThumbnailImageUrl When profilePicOverride is not empty, use it instead.
 * @param currentAvatarTags 
 * @param dateJoined 
 * @param developerType 
 * @param displayName A users visual display name. This is what shows up in-game, and can different from their `username`. Changing display name is restricted to a cooldown period.
 * @param friendKey 
 * @param id A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
 * @param isFriend Either their `friendKey`, or empty string if you are not friends. Unknown usage.
 * @param lastActivity Either a date-time or empty string.
 * @param lastLogin Either a date-time or empty string.
 * @param lastPlatform This can be `standalonewindows` or `android`, but can also pretty much be any random Unity verison such as `2019.2.4-801-Release` or `2019.2.2-772-Release` or even `unknownplatform`.
 * @param profilePicOverride 
 * @param profilePicOverrideThumbnail 
 * @param pronouns 
 * @param state 
 * @param status 
 * @param statusDescription 
 * @param tags  
 * @param userIcon 
 * @param badges  
 * @param friendRequestStatus 
 * @param instanceId InstanceID can be \"offline\" on User profiles if you are not friends with that user and \"private\" if you are friends and user is in private instance.
 * @param lastMobile 
 * @param location WorldID be \"offline\" on User profiles if you are not friends with that user.
 * @param note 
 * @param platform 
 * @param travelingToInstance 
 * @param travelingToLocation 
 * @param travelingToWorld 
 * @param username -| A users unique name, used during login. This is different from `displayName` which is what shows up in-game. A users `username` can never be changed.' **DEPRECATED:** VRChat API no longer return usernames of other users. [See issue by Tupper for more information](https://github.com/pypy-vrc/VRCX/issues/429).
 * @param worldId WorldID be \"offline\" on User profiles if you are not friends with that user.
 */
@Serializable

data class User (

    @SerialName(value = "ageVerificationStatus") @Required val ageVerificationStatus: AgeVerificationStatus,

    @SerialName(value = "ageVerified") @Required val ageVerified: kotlin.Boolean,

    @SerialName(value = "allowAvatarCopying") @Required val allowAvatarCopying: kotlin.Boolean = true,

    @SerialName(value = "bio") @Required val bio: kotlin.String,

    @SerialName(value = "bioLinks") @Required val bioLinks: kotlin.collections.List<kotlin.String>,

    /* When profilePicOverride is not empty, use it instead. */
    @SerialName(value = "currentAvatarImageUrl") @Required val currentAvatarImageUrl: kotlin.String,

    /* When profilePicOverride is not empty, use it instead. */
    @SerialName(value = "currentAvatarThumbnailImageUrl") @Required val currentAvatarThumbnailImageUrl: kotlin.String,

    @SerialName(value = "currentAvatarTags") @Required val currentAvatarTags: kotlin.collections.List<kotlin.String>,

    @SerialName(value = "date_joined") @Required val dateJoined: kotlin.String,

    @SerialName(value = "developerType") @Required val developerType: DeveloperType = DeveloperType.None,

    /* A users visual display name. This is what shows up in-game, and can different from their `username`. Changing display name is restricted to a cooldown period. */
    @SerialName(value = "displayName") @Required val displayName: kotlin.String,

    @SerialName(value = "friendKey") @Required val friendKey: kotlin.String,

    /* A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed. */
    @SerialName(value = "id") @Required val id: kotlin.String,

    /* Either their `friendKey`, or empty string if you are not friends. Unknown usage. */
    @SerialName(value = "isFriend") @Required val isFriend: kotlin.Boolean,

    /* Either a date-time or empty string. */
    @SerialName(value = "last_activity") @Required val lastActivity: kotlin.String,

    /* Either a date-time or empty string. */
    @SerialName(value = "last_login") @Required val lastLogin: kotlin.String,

    /* This can be `standalonewindows` or `android`, but can also pretty much be any random Unity verison such as `2019.2.4-801-Release` or `2019.2.2-772-Release` or even `unknownplatform`. */
    @SerialName(value = "last_platform") @Required val lastPlatform: kotlin.String,

    @SerialName(value = "profilePicOverride") @Required val profilePicOverride: kotlin.String,

    @SerialName(value = "profilePicOverrideThumbnail") @Required val profilePicOverrideThumbnail: kotlin.String,

    @SerialName(value = "pronouns") @Required val pronouns: kotlin.String,

    @SerialName(value = "state") @Required val state: UserState = UserState.Offline,

    @SerialName(value = "status") @Required val status: UserStatus = UserStatus.Offline,

    @SerialName(value = "statusDescription") @Required val statusDescription: kotlin.String,

    /*   */
    @SerialName(value = "tags") @Required val tags: kotlin.collections.List<kotlin.String>,

    @SerialName(value = "userIcon") @Required val userIcon: kotlin.String,

    /*   */
    @SerialName(value = "badges") val badges: kotlin.collections.List<Badge>? = null,

    @SerialName(value = "friendRequestStatus") val friendRequestStatus: kotlin.String? = null,

    /* InstanceID can be \"offline\" on User profiles if you are not friends with that user and \"private\" if you are friends and user is in private instance. */
    @SerialName(value = "instanceId") val instanceId: kotlin.String? = null,

    @SerialName(value = "last_mobile") val lastMobile: kotlin.String? = null,

    /* WorldID be \"offline\" on User profiles if you are not friends with that user. */
    @SerialName(value = "location") val location: kotlin.String? = null,

    @SerialName(value = "note") val note: kotlin.String? = null,

    @SerialName(value = "platform") val platform: kotlin.String? = null,

    @SerialName(value = "travelingToInstance") val travelingToInstance: kotlin.String? = null,

    @SerialName(value = "travelingToLocation") val travelingToLocation: kotlin.String? = null,

    @SerialName(value = "travelingToWorld") val travelingToWorld: kotlin.String? = null,

    /* -| A users unique name, used during login. This is different from `displayName` which is what shows up in-game. A users `username` can never be changed.' **DEPRECATED:** VRChat API no longer return usernames of other users. [See issue by Tupper for more information](https://github.com/pypy-vrc/VRCX/issues/429). */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "username") val username: kotlin.String? = null,

    /* WorldID be \"offline\" on User profiles if you are not friends with that user. */
    @SerialName(value = "worldId") val worldId: kotlin.String? = null

)

